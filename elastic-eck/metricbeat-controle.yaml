apiVersion: beat.k8s.elastic.co/v1beta1
kind: Beat
metadata:
  name: metricbeat-controle
  namespace: elastic-eck
spec:
  type: metricbeat
  version: 8.16.0
  elasticsearchRef:
    name: elasticsearch
  kibanaRef:
    name: kibana
  config:
    metricbeat:
      modules:
      - module: kubernetes
        node: $${NODE_NAME}
        enabled: true
        metricsets:
          - controllermanager
        hosts: ["https://localhost:10257"]
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        ssl:
          verification_mode: none
        period: 10s
        processors:
        - add_kubernetes_metadata:
            host: $${NODE_NAME}
      - module: kubernetes
        node: $${NODE_NAME}
        enabled: true
        metricsets:
          - scheduler
        hosts: ["https://localhost:10259"]
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        ssl:
          verification_mode: none
        period: 10s
        processors:
        - add_kubernetes_metadata:
            host: $${NODE_NAME}
      - module: etcd
        node: $${NODE_NAME}
        metricsets: ["leader", "self", "store"]
        period: 10s
        hosts: ["https://localhost:2379"]
        ssl:
          certificate_authorities: /var/lib/rancher/rke2/server/tls/etcd/server-ca.crt
          certificate: /var/lib/rancher/rke2/server/tls/etcd/client.crt
          key: /var/lib/rancher/rke2/server/tls/etcd/client.key
        processors:
        - add_kubernetes_metadata:
            host: $${NODE_NAME}
    processors:
    - add_host_metadata: {}
    - add_kubernetes_metadata:
        host: $${NODE_NAME}
    - add_fields:
        target: orchestrator.cluster
        fields:
          name: TuringPI
          url: ${clusterdomain:=undefined}
  daemonSet:
    podTemplate:
      spec:
        nodeSelector:
          node-role.kubernetes.io/control-plane: "true"
        serviceAccountName: metricbeat
        automountServiceAccountToken: true # some older Beat versions are depending on this settings presence in k8s context
        containers:
        - args:
          - -e
          - -c
          - /etc/beat.yml
          name: metricbeat
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          volumeMounts:
          - name: tlsetcd
            mountPath: /var/lib/rancher/rke2/server/tls/etcd/
            readOnly: true
        dnsPolicy: ClusterFirstWithHostNet
        hostNetwork: true # Allows to provide richer host metadata
        securityContext:
          runAsUser: 0
        terminationGracePeriodSeconds: 30
        volumes:
        - name: tlsetcd
          hostPath:
            path: /var/lib/rancher/rke2/server/tls/etcd/
