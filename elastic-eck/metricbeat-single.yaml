apiVersion: beat.k8s.elastic.co/v1beta1
kind: Beat
metadata:
  name: metricbeat-single
  namespace: elastic-eck
spec:
  type: metricbeat
  version: 8.16.0
  elasticsearchRef:
    name: elasticsearch
  kibanaRef:
    name: kibana
  config:
    metricbeat:
      autodiscover:
        providers:
        - hints:
            default_config: {}
            enabled: "true"
          node: $${NODE_NAME}
          type: kubernetes
      modules:
      - module: kubernetes
        hosts: ["kube-state-metrics.kube-system:8080"]
        period: 10s
        add_metadata: true
        metricsets:
          - state_namespace
          - state_node
          - state_deployment
          - state_daemonset
          - state_replicaset
          - state_pod
          - state_container
          - state_job
          - state_cronjob
          - state_resourcequota
          - state_statefulset
          - state_service
          - state_persistentvolume
          - state_persistentvolumeclaim
          - state_storageclass
      - module: kubernetes
        metricsets:
          - apiserver
        hosts: ["https://$${KUBERNETES_SERVICE_HOST}:$${KUBERNETES_SERVICE_PORT}"]
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        ssl.certificate_authorities:
          - /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        period: 30s
      - module: kubernetes
        metricsets:
          - event
        period: 10s
    processors:
    - add_host_metadata: {}
    - add_kubernetes_metadata:
        host: $${NODE_NAME}
    - add_fields:
        target: orchestrator.cluster
        fields:
          name: TuringPI
          url: ${clusterdomain:=undefined}
  deployment:
    replicas: 1
    podTemplate:
      spec:
        serviceAccountName: metricbeat
        automountServiceAccountToken: true # some older Beat versions are depending on this settings presence in k8s context
        containers:
        - args:
          - -e
          - -c
          - /etc/beat.yml
          - -system.hostfs=/hostfs
          name: metricbeat
          volumeMounts:
          - mountPath: /hostfs/sys/fs/cgroup
            name: cgroup
          - mountPath: /var/run/docker.sock
            name: dockersock
          - mountPath: /hostfs/proc
            name: proc
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
        dnsPolicy: ClusterFirstWithHostNet
        hostNetwork: true # Allows to provide richer host metadata
        securityContext:
          runAsUser: 0
        terminationGracePeriodSeconds: 30
        volumes:
        - hostPath:
            path: /sys/fs/cgroup
          name: cgroup
        - hostPath:
            path: /var/run/docker.sock
          name: dockersock
        - hostPath:
            path: /proc
          name: proc
---